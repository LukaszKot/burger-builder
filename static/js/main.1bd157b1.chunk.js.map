{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","store/actions/order.js","store/actions/actionTypes.js","store/actions/auth.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","Logo","props","className","classes","style","height","marginBottom","src","logo","alt","NavigationItem","exact","active","activeClassName","to","link","children","NavigationItems","isAuthenticated","DrawerToggle","onClick","clicked","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","Backdrop","show","SideDrawer","attachedClasses","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","styles","Content","Component","connect","auth","token","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","Burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","BuildControl","Label","label","disabled","Less","removed","More","added","controls","BuildControls","price","toFixed","control","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","transform","opacity","Button","btnType","OrderSummary","igredientsSummary","textTransform","purchaseCanceled","purchaseContinued","Spinner","Loader","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","message","eject","instance","create","baseURL","purchaseBurgerStart","authSuccess","userId","idUser","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerBuilder","purchasing","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","history","push","purchaseHandler","onSetAuthRedirectPath","onInitIngredients","disabledInfo","ings","orderSummary","burger","onIngredientAdded","onIngredientRemoved","updatePurchaseState","updatedIngredients","acc","curr","burgerBuilder","totalPrice","ingredientName","get","then","data","catch","burgerBuilderActions","CheckoutSummary","width","margin","onCheckoutCancelled","onCheckoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","inputType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","elementType","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidaty","inputIdentifiers","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","loading","orders","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","actions","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","purchased","match","component","Order","amount","ingredientOutput","ig","display","border","padding","Orders","onFetchOrders","queryParams","fetchedOrders","err","Auth","isEmail","password","isSignup","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","buildingBurger","authRedirectPath","errorMessage","authRedirect","building","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","Logout","onLogout","App","onTryAutoSignup","routes","getItem","Boolean","window","location","hostname","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","action","newOrder","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.1bd157b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__1rZZD\",\"BreadTop\":\"BurgerIngredient_BreadTop__1DWtY\",\"Seeds1\":\"BurgerIngredient_Seeds1__2fgug\",\"Seeds2\":\"BurgerIngredient_Seeds2__2yTCU\",\"Meat\":\"BurgerIngredient_Meat__2fCnK\",\"Cheese\":\"BurgerIngredient_Cheese__3PRgL\",\"Salad\":\"BurgerIngredient_Salad__3YPJK\",\"Bacon\":\"BurgerIngredient_Bacon__2n838\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1dzeJ\",\"Open\":\"SideDrawer_Open___wyhz\",\"Close\":\"SideDrawer_Close__2B9Kg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__GdjBf\",\"Label\":\"BuildControl_Label__3y1MA\",\"Less\":\"BuildControl_Less__GTYN0\",\"More\":\"BuildControl_More__DPsZM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__BSTTa\",\"Label\":\"Input_Label__10hfB\",\"InputElement\":\"Input_InputElement__3r-MZ\",\"Invalid\":\"Input_Invalid__3kJXO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__35RU1\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1qZKM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__3ooFT\",\"active\":\"NavigationItem_active__2hYpx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2bdVq\",\"OrderButton\":\"BuildControls_OrderButton__20eVq\",\"enable\":\"BuildControls_enable__4mX0u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3YIfY\",\"Success\":\"Button_Success__3IDoX\",\"Danger\":\"Button_Danger__38a90\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3RAF3\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3ukE8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1wbQ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__2BcCZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__22O5G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__hCHt3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__C8xG_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1lapg\",\"load2\":\"Spinner_load2__2DMeW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__1NHy0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__1LsTX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3wano\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__2o6Uo\"};","import React from 'react'\r\nimport logo from '../../assets/images/burger-logo.png'\r\nimport classes from './Logo.module.css'\r\n\r\nconst Logo = (props) => (\r\n    <div className={classes.Logo} style={{ height: props.height, marginBottom: props.marginBottom }}>\r\n        <img src={logo} alt=\"MyBurger\" />\r\n    </div>\r\n)\r\n\r\nexport default Logo","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport classes from './NavigationItem.module.css'\r\nconst NavigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink exact={props.active} activeClassName={classes.active} to={props.link}>{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default NavigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.module.css'\r\nimport NavigationItem from './NavigationItem/NavigationItem'\r\nconst NavigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem active link=\"/\">Burger Builder</NavigationItem>\r\n        {props.isAuthenticated ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null}\r\n        {props.isAuthenticated ? <NavigationItem link=\"/logout\">Logout</NavigationItem> : <NavigationItem link=\"/auth\">Authenticate</NavigationItem>}\r\n    </ul>\r\n);\r\n\r\nexport default NavigationItems;","import React from 'react'\r\nimport classes from './DrawerToggle.module.css'\r\n\r\nconst DrawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default DrawerToggle","import React from 'react';\r\nimport classes from './Toolbar.module.css'\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle'\r\n\r\n\r\nconst Toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        <Logo height=\"80%\" />\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth} />\r\n        </nav>\r\n    </header>\r\n)\r\n\r\nexport default Toolbar;","import React from 'react';\r\nimport classes from './Backdrop.module.css'\r\n\r\nconst Backdrop = (props) => props.show ?\r\n    <div className={classes.Backdrop} onClick={props.clicked}></div>\r\n    : null;\r\n\r\nexport default Backdrop;","import React, { Fragment } from 'react';\r\nimport classes from './SideDrawer.module.css'\r\n\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\n\r\nconst SideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close]\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open]\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Backdrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(\" \")}>\r\n                <Logo height=\"11%\" marginBottom=\"32px\" />\r\n                <nav>\r\n                    <NavigationItems isAuthenticated={props.isAuth} />\r\n                </nav>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default SideDrawer;","import React, { Fragment, Component } from 'react';\r\nimport styles from './Layout.module.css'\r\nimport Toolbar from '../Navigation/Toolbar/Toolbar'\r\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\r\nimport { connect } from 'react-redux'\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({ showSideDrawer: false })\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                showSideDrawer: !prevState.showSideDrawer\r\n            }\r\n        }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Toolbar\r\n                    isAuth={this.props.isAuthenticated}\r\n                    drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n                <SideDrawer\r\n                    open={this.state.showSideDrawer}\r\n                    closed={this.sideDrawerClosedHandler}\r\n                    isAuth={this.props.isAuthenticated} />\r\n                <main className={styles.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\r\nimport classes from './BurgerIngredient.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BurgerIngredient = (props) => {\r\n    let ingredient = null;\r\n    switch (props.type) {\r\n        case 'bread-bottom':\r\n            ingredient = <div className={classes.BreadBottom}></div>\r\n            break;\r\n        case 'bread-top':\r\n            ingredient = (\r\n                <div className={classes.BreadTop}>\r\n                    <div className={classes.Seeds1}></div>\r\n                    <div className={classes.Seeds2}></div>\r\n                </div>\r\n            )\r\n            break;\r\n        case 'meat':\r\n            ingredient = (\r\n                <div className={classes.Meat}></div>\r\n            )\r\n            break;\r\n        case 'cheese':\r\n            ingredient = (\r\n                <div className={classes.Cheese}></div>\r\n            )\r\n            break;\r\n        case 'bacon':\r\n            ingredient = (\r\n                <div className={classes.Bacon}></div>\r\n            )\r\n            break;\r\n        case 'salad':\r\n            ingredient = (\r\n                <div className={classes.Salad}></div>\r\n            )\r\n            break;\r\n        default:\r\n            ingredient = null;\r\n    }\r\n    return ingredient;\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredient;","import React from 'react'\r\nimport classes from './Burger.module.css'\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient'\r\nconst Burger = (props) => {\r\n    let transformedIngredients = Object.keys(props.ingredients)\r\n        .map(igKey => {\r\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n                return (<BurgerIngredient key={igKey + i} type={igKey} />)\r\n            })\r\n        }).reduce((arr, el) => {\r\n            return arr.concat(el)\r\n        }, []);\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please start adding ingredients</p>\r\n    }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Burger;","import React from 'react';\r\nimport classes from './BuildControl.module.css'\r\n\r\nconst BuildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button disabled={props.disabled} className={classes.Less} onClick={props.removed}>Less</button>\r\n        <button className={classes.More} onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default BuildControl;","import React from 'react'\r\nimport classes from './BuildControls.module.css'\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n];\r\n\r\nconst BuildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(control =>\r\n            <BuildControl\r\n                key={control.label}\r\n                label={control.label}\r\n                added={() => props.ingredientAdded(control.type)}\r\n                removed={() => props.ingredientRemoved(control.type)}\r\n                disabled={props.disabled[control.type]} />)}\r\n        <button\r\n            className={classes.OrderButton}\r\n            disabled={!props.purchasable}\r\n            onClick={props.ordered}>{props.isAuth ? \"ORDER NOW\" : \"SIGNUP TO ORDER\"}</button>\r\n\r\n    </div>\r\n)\r\n\r\nexport default BuildControls;","import React, { Fragment, Component } from 'react';\r\nimport classes from './Modal.module.css'\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div className={classes.Modal} style={{\r\n                    transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                    opacity: this.props.show ? '1' : '0'\r\n                }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport classes from './Button.module.css'\r\nconst Button = (props) => (\r\n    <button className={[classes.Button, classes[props.btnType]].join(' ')} disabled={props.disabled} onClick={props.clicked}>\r\n        {props.children}\r\n    </button>\r\n);\r\n\r\nexport default Button;","import React, { Fragment, Component } from 'react';\r\nimport Button from '../../UI/Button/Button'\r\n\r\nclass OrderSummary extends Component {\r\n    render() {\r\n        const igredientsSummary = Object.keys(this.props.ingredients)\r\n            .map(key =>\r\n                <li key={key}>\r\n                    <span style={{ textTransform: \"capitalize\" }}>{key}</span>: {this.props.ingredients[key]}\r\n                </li>)\r\n        return (\r\n            <Fragment>\r\n                <h3>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients:</p>\r\n                <ul>\r\n                    {igredientsSummary}\r\n                </ul>\r\n                <p><strong>Total Price: {this.props.price.toFixed(2)}</strong></p>\r\n                <p>Continue to Checkout?</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCanceled}>CANCEL</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OrderSummary;","import React from 'react'\r\nimport classes from './Spinner.module.css'\r\n\r\nconst Spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default Spinner;","import React, { Fragment, Component } from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal'\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n\r\n        constructor(props) {\r\n            super(props);\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({ error: null })\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({ error: error });\r\n            })\r\n        }\r\n\r\n        state = { error: null }\r\n\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({ error: null })\r\n        }\r\n        render() {\r\n            return (\r\n                <Fragment>\r\n                    <Modal show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Fragment>\r\n            )\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor)\r\n            axios.interceptors.response.eject(this.resInterceptor)\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://burger-builer-backend.firebaseio.com'\r\n})\r\n\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes'\r\nimport axios from '../../axios-orders'\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart())\r\n        axios.post('/orders.json?auth=' + token, orderData)\r\n            .then(response => {\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData))\r\n            })\r\n            .catch(error => {\r\n                dispatch(purchaseBurgerFail(error))\r\n            })\r\n    }\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\nexport const fetchOrderSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n}\r\n\r\nexport const fetchOrderFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const fetchOrderStart = () => {\r\n    return { type: actionTypes.FETCH_ORDERS_START }\r\n}\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrderStart());\r\n        const queryParams = \"?auth=\" + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"'\r\n        axios.get(\"/orders.json\" + queryParams)\r\n            .then(res => {\r\n                const fetchedOrders = []\r\n                for (let key in res.data) {\r\n                    fetchedOrders.push({ ...res.data[key], id: key })\r\n                }\r\n                dispatch(fetchOrderSuccess(fetchedOrders))\r\n            })\r\n            .catch(err => dispatch(fetchOrderFail(err)))\r\n    }\r\n}","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","import axios from 'axios';\r\n\r\nimport * as actionTypes from './actionTypes'\r\n\r\nexport const authStart = () => {\r\n    return { type: actionTypes.AUTH_START }\r\n}\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return { type: actionTypes.AUTH_SUCCESS, token: token, idUser: userId }\r\n}\r\n\r\nexport const authFail = (error) => {\r\n    return { type: actionTypes.AUTH_FAIL, error: error }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('expirationDate')\r\n    localStorage.removeItem('userId')\r\n    return { type: actionTypes.AUTH_LOGOUT }\r\n}\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return (dispatch) => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        }, expirationTime * 1000)\r\n    }\r\n}\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart())\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        }\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyD3fKUFNbY_dEMk06o2zqgUL0rM2f-yEn0'\r\n        if (!isSignup) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyD3fKUFNbY_dEMk06o2zqgUL0rM2f-yEn0'\r\n        }\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000)\r\n\r\n                localStorage.setItem('token', response.data.idToken)\r\n                localStorage.setItem('expirationDate', expirationDate)\r\n                localStorage.setItem('userId', response.data.localId)\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId))\r\n                dispatch(checkAuthTimeout(response.data.expiresIn))\r\n            })\r\n            .catch(err => {\r\n                dispatch(authFail(err.response.data.error));\r\n            })\r\n    }\r\n}\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    }\r\n\r\n}\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(logout());\r\n        }\r\n        else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate > new Date()) {\r\n                const userId = localStorage.getItem('userId')\r\n                dispatch(authSuccess(token, userId))\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n\r\n            }\r\n            else {\r\n                dispatch(logout());\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\n","import React, { Component, Fragment } from 'react';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport { connect } from 'react-redux'\r\nimport * as burgerBuilderActions from '../../store/actions/index'\r\nimport axios from '../../axios-orders'\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        purchasing: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({\r\n            purchasing: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        }\r\n        for (let key in disabledInfo) { disabledInfo[key] = disabledInfo[key] <= 0 }\r\n\r\n        let orderSummary = null;\r\n        if (this.props.ings) {\r\n            orderSummary = <OrderSummary ingredients={this.props.ings}\r\n                purchaseCanceled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler}\r\n                price={this.props.price} />\r\n        }\r\n\r\n\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded</p> : <Spinner />\r\n\r\n        if (this.props.ings) {\r\n            burger = <Fragment><Burger ingredients={this.props.ings} />\r\n                <BuildControls\r\n                    ingredientAdded={this.props.onIngredientAdded}\r\n                    ingredientRemoved={this.props.onIngredientRemoved}\r\n                    disabled={disabledInfo}\r\n                    price={this.props.price}\r\n                    purchasable={this.updatePurchaseState(this.props.ings)}\r\n                    ordered={this.purchaseHandler}\r\n                    isAuth={this.props.isAuthenticated}\r\n                /></Fragment>\r\n        }\r\n\r\n\r\n\r\n\r\n        return (\r\n            <Fragment>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n\r\n                {burger}\r\n\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout')\r\n    }\r\n\r\n    updatePurchaseState(updatedIngredients) {\r\n        const ingredients = { ...updatedIngredients }\r\n        const sum = Object.keys(ingredients)\r\n            .map(key => ingredients[key])\r\n            .reduce((acc, curr) => acc + curr, 0)\r\n        return sum > 0;\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        if (this.props.isAuthenticated)\r\n            this.setState({ purchasing: true })\r\n        else {\r\n            this.props.onSetAuthRedirectPath('/checkout')\r\n            this.props.history.push('/auth')\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token !== null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingredientName) => dispatch(burgerBuilderActions.addIngredient(ingredientName)),\r\n        onIngredientRemoved: (ingredientName) => dispatch(burgerBuilderActions.removeIngredient(ingredientName)),\r\n        onInitIngredients: () => dispatch(burgerBuilderActions.initIngredients()),\r\n        onInitPurchase: () => dispatch(burgerBuilderActions.purchaseInit()),\r\n        onSetAuthRedirectPath: (path) => dispatch(burgerBuilderActions.setAuthRedirectPath(path))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders'\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED,\r\n    }\r\n}\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n\r\n        axios.get('/ingredients.json')\r\n            .then(response => {\r\n                dispatch(setIngredients(response.data))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchIngredientsFailed())\r\n            })\r\n\r\n    }\r\n}","import React from 'react';\r\nimport Burger from '../../Burger/Burger'\r\nimport Button from '../../UI/Button/Button'\r\nimport classes from './CheckoutSummary.module.css'\r\n\r\nconst CheckoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{ width: '100%', margin: 'auto' }}>\r\n                <Burger ingredients={props.ingredients} />\r\n            </div>\r\n            <Button btnType=\"Danger\"\r\n                clicked={props.onCheckoutCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\"\r\n                clicked={props.onCheckoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutSummary;","import React from 'react'\r\nimport classes from './Input.module.css'\r\n\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid)\r\n    }\r\n\r\n    switch (props.inputType) {\r\n        case ('input'):\r\n            inputElement = <input className={inputClasses.join(' ')} {...props.elementConfig} value={props.value} onChange={props.changed} />\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea className={inputClasses.join(' ')}  {...props.elementConfig} value={props.value} onChange={props.changed} />\r\n            break;\r\n        case ('select'):\r\n            inputElement = <select className={inputClasses.join(' ')} value={props.value} onChange={props.changed}>\r\n                {props.elementConfig.options.map(option => (\r\n                    <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n                ))}\r\n            </select>\r\n            break;\r\n        default:\r\n            inputElement = <input className={inputClasses.join(' ')} {...props.elementConfig} value={props.value} onChange={props.changed} />\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default input;","import React, { Component } from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport classes from './ContactData.module.css'\r\nimport axios from '../../../axios-orders'\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport { connect } from 'react-redux'\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as actions from '../../../store/actions/index'\r\n\r\nclass ContactData extends Component {\r\n\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: \"\",\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: \"\",\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Zip Code'\r\n                },\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6,\r\n                    maxLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: \"\",\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-mail'\r\n                },\r\n                value: \"\",\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [{\r\n                        value: 'fastest',\r\n                        displayValue: 'Fastest'\r\n                    },\r\n                    {\r\n                        value: 'cheapest',\r\n                        displayValue: 'Cheapest'\r\n                    }]\r\n                },\r\n                value: \"fastest\",\r\n                valid: true,\r\n                validation: {\r\n                },\r\n            },\r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData,\r\n            userId: this.props.userId\r\n        }\r\n\r\n        this.props.onOrderBurger(order, this.props.token);\r\n    }\r\n\r\n    checkValidaty(value, rules) {\r\n        let isValid = true;\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        }\r\n\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        }\r\n        updatedFormElement.value = event.target.value\r\n        updatedFormElement.valid = this.checkValidaty(updatedFormElement.value, updatedFormElement.validation)\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        let formIsValid = true;\r\n        for (let inputIdentifiers in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputIdentifiers].valid && formIsValid\r\n        }\r\n\r\n        this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = []\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key],\r\n            })\r\n        }\r\n\r\n        let form = (<div className={classes.ContactData}>\r\n            <h4>Entry you Contact Data</h4>\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input\r\n                        key={formElement.id}\r\n                        inputType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n                ))}\r\n                <Button disabled={!this.state.formIsValid} btnType=\"Success\" >ORDER</Button>\r\n            </form>\r\n        </div>);\r\n        if (this.props.loading) {\r\n            form = <Spinner />\r\n        }\r\n\r\n        return form;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.orders.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));\r\n","import React, { Component } from 'react'\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport ContactData from './ContactData/ContactData';\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../store/actions/index'\r\n\r\nclass Checkout extends Component {\r\n    render() {\r\n        let summary = <Redirect to='/' />\r\n        const purchasedRedirect = this.props.purchased ? <Redirect to='/' /> : null\r\n        if (this.props.ings) {\r\n            summary = (<div>\r\n                {purchasedRedirect}\r\n                <CheckoutSummary\r\n                    ingredients={this.props.ings}\r\n                    onCheckoutCancelled={this.checkoutCancelledHandler}\r\n                    onCheckoutContinued={this.checkoutContinuedHandler} />\r\n                <Route path={this.props.match.path + \"/contact-data\"} component={ContactData} />\r\n            </div>)\r\n        }\r\n        return summary\r\n    }\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace(\"/checkout/contact-data\");\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        purchased: state.orders.purchased\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react'\r\nimport classes from './Order.module.css'\r\n\r\nconst Order = (props) => {\r\n    const ingredients = []\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push({ name: ingredientName, amount: props.ingredients[ingredientName] })\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map((ig) => {\r\n        return <span\r\n            style={{\r\n                textTransform: 'capitalize', display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n            }}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>\r\n    })\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Prize: <strong>USD {props.price.toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\n\r\nexport default Order;","import React, { Component } from 'react'\r\nimport Order from '../../components/Order/Order'\r\nimport axios from '../../axios-orders'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as actions from '../../store/actions/index'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\n\r\nclass Orders extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render() {\r\n        let orders = <Spinner />;\r\n        if (!this.props.loading) {\r\n            orders = (\r\n                <div>\r\n                    {this.props.orders.map(order => {\r\n                        return <Order key={order.id}\r\n                            ingredients={order.ingredients}\r\n                            price={order.price} />\r\n                    })}\r\n                </div>\r\n            );\r\n        }\r\n        return orders;\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        orders: state.orders.orders,\r\n        loading: state.orders.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, { Component } from 'react';\r\nimport Input from '../../components/UI/Input/Input'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport classes from './Auth.module.css'\r\nimport * as actions from '../../store/actions/index'\r\nimport { connect } from 'react-redux'\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Mail Address'\r\n                },\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: \"\",\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        },\r\n        isSignup: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.buildingBurger && this.props.authRedirectPath !== \"/\") {\r\n            this.props.onSetAuthRedirectPath();\r\n        }\r\n    }\r\n\r\n    checkValidaty(value, rules) {\r\n        let isValid = true;\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: this.checkValidaty(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true\r\n            }\r\n        };\r\n        this.setState({ controls: updatedControls })\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup)\r\n    }\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return { isSignup: !prevState.isSignup }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = []\r\n        for (let key in this.state.controls) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.controls[key],\r\n            })\r\n        }\r\n\r\n        let form = formElementsArray.map(formElement => (\r\n            <Input\r\n                key={formElement.id}\r\n                inputType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched={formElement.config.touched}\r\n                changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n            />\r\n\r\n        ));\r\n\r\n        if (this.props.loading) {\r\n            form = <Spinner />\r\n        }\r\n\r\n        let errorMessage = null;\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            )\r\n        }\r\n\r\n        let authRedirect = null\r\n        if (this.props.isAuthenticated) {\r\n            authRedirect = <Redirect to={this.props.authRedirectPath} />\r\n        }\r\n\r\n        return (\r\n            <div className={classes.Auth}>\r\n                {errorMessage}\r\n                {authRedirect}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"Success\">Submit</Button>\r\n                </form>\r\n                <Button clicked={this.switchAuthModeHandler} btnType=\"Danger\">SWITCH TO {this.state.isSignup ? 'SIGNIN' : 'SIGNUP'}</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        buildingBurger: state.burgerBuilder.building,\r\n        authRedirectPath: state.auth.authRedirectPath\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup)),\r\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath(\"/\"))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, { Component } from 'react';\r\nimport * as actions from '../../../store/actions/index'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.onLogout();\r\n    }\r\n    render() {\r\n        return <Redirect to='/' />;\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout'\nimport * as actions from './store/actions/index';\nimport { connect } from 'react-redux'\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n\n\n  render() {\n\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/auth\" component={Auth} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    }\n\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false\r\n}\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\r\n                },\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n                building: true\r\n            }\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\r\n                },\r\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n                building: true\r\n            }\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    salad: action.ingredients.salad,\r\n                    bacon: action.ingredients.bacon,\r\n                    cheese: action.ingredients.cheese,\r\n                    meat: action.ingredients.meat,\r\n                },\r\n                totalPrice: 4,\r\n                error: false,\r\n                building: false\r\n            }\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_INIT:\r\n            return {\r\n                ...state,\r\n                purchased: false\r\n            }\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = {\r\n                ...action.orderData,\r\n                id: action.orderId\r\n            }\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                orders: state.orders.concat(newOrder),\r\n                purchased: true\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            };\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: action.orders,\r\n                loading: false\r\n            }\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                loading: true\r\n            }\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                token: action.token,\r\n                userId: action.idUser,\r\n                error: null,\r\n                loading: false\r\n            }\r\n        case actionTypes.AUTH_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n            }\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                userId: null\r\n            }\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n            return {\r\n                ...state,\r\n                authRedirectPath: action.path,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder'\nimport thunk from 'redux-thunk';\n\nimport orderReducer from './store/reducers/order'\nimport authReducer from './store/reducers/auth'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  orders: orderReducer,\n  auth: authReducer\n})\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n))\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename=\"/burger-builder\">\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}